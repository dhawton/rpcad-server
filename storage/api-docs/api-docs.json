{
    "swagger": "2.0",
    "info": {
        "title": "CAD Server Web API",
        "description": "Paths with lock icon on right side require authentication, except for paths beginning with /external\n          which require an API key passed in the header",
        "contact": {
            "name": "Daniel Hawton",
            "email": "daniel@hawton.org"
        },
        "version": "1"
    },
    "host": "https://api.rpcad.org",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "paths": {
        "/account/{userid}": {
            "get": {
                "tags": [
                    "account"
                ],
                "summary": "Get account info",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID, if null uses authenticated account",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not found"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/definitions/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            },
            "post": {
                "tags": [
                    "account"
                ],
                "summary": "Modify account",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID, if null uses authenticated user",
                        "type": "integer"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Change email address",
                        "type": "string"
                    },
                    {
                        "name": "current_password",
                        "in": "formData",
                        "description": "Current account password, used for password changes",
                        "type": "string"
                    },
                    {
                        "name": "new_password",
                        "in": "formData",
                        "description": "Change password, requires current_password",
                        "type": "string"
                    },
                    {
                        "name": "identifier",
                        "in": "formData",
                        "description": "Change identifier",
                        "type": "integer"
                    },
                    {
                        "name": "identifier_type",
                        "in": "formData",
                        "description": "Change identifier type (ie, Civ, LEO, etc)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Malformed request (usually missing field)",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Malformed Request"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not Found"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict, usually for invalid current passwords, duplicate identifiers within same identifier type",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Conflict"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/definitions/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            },
            "delete": {
                "tags": [
                    "account"
                ],
                "summary": "Delete account",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not found"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            }
        },
        "/account/new": {
            "post": {
                "tags": [
                    "account"
                ],
                "summary": "Create account",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email address",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Password",
                        "type": "string"
                    },
                    {
                        "name": "identifier",
                        "in": "formData",
                        "description": "Identifier",
                        "type": "integer"
                    },
                    {
                        "name": "identifier_type",
                        "in": "formData",
                        "description": "Identifier type (ie, Civ, LEO, etc)",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Display name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Malformed request (usually missing field)",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Malformed Request"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not Found"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict, usually for invalid current passwords, duplicate identifiers within same identifier type",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Conflict"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/definitions/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            }
        },
        "/account/roles": {
            "get": {
                "tags": [
                    "account"
                ],
                "summary": "Get usable roles",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "description": "Role name",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            }
        },
        "/account/{userid}/roles": {
            "post": {
                "tags": [
                    "account"
                ],
                "summary": "Add role to account",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID, if null uses authenticated user",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "role",
                        "in": "formData",
                        "description": "Role to add",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Malformed request (usually missing field)",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Malformed Request"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not Found"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict/Role already defined",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Conflict"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/definitions/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            },
            "delete": {
                "tags": [
                    "account"
                ],
                "summary": "Delete role from account",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID, if null uses authenticated user",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "role",
                        "in": "formData",
                        "description": "Role to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Malformed request (usually missing field)",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Malformed Request"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not Found"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict/Role already defined",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Conflict"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/definitions/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            }
        },
        "/account/search": {
            "get": {
                "tags": [
                    "account"
                ],
                "summary": "Get list of accounts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Get list of users matching filter (identifier, firstname, lastname, or email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            }
        },
        "/auth": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login to CAD",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "User email address",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "User password",
                        "type": "string"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout from CAD",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "Unauthenticated",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    }
                }
            }
        },
        "/servers": {
            "get": {
                "tags": [
                    "servers"
                ],
                "summary": "Get list of servers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "servers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Server"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/servers/{id}": {
            "post": {
                "tags": [
                    "servers"
                ],
                "summary": "Edit Server Entry",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Server ID #, if not provided creates a new server entry",
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Unique server name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not Found"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    }
                },
                "security": [
                    "session"
                ]
            },
            "delete": {
                "tags": [
                    "servers"
                ],
                "summary": "Delete a server",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Server ID #",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not Found"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "$ref": "#/definitions/OK"
                        }
                    }
                },
                "security": [
                    "session"
                ]
            }
        },
        "/users/{userid}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID #",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not Found"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/definitions/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            }
        },
        "/cad/status/{userid}": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Get or set user details, if you change status to offline, the remaining parameters are set to null automatically whether defined explicitly or not.  Values of null will be set when status is 'Offline' or when a logout is processed.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userid",
                        "in": "path",
                        "description": "User ID #, if not provided, defaults to logged in user",
                        "type": "integer"
                    },
                    {
                        "name": "department",
                        "in": "formData",
                        "description": "Department user is in, IE: Civilian, Police, Sheriff, Highway, USCG",
                        "type": "string"
                    },
                    {
                        "name": "server",
                        "in": "formData",
                        "description": "Server ID the user is in",
                        "type": "integer"
                    },
                    {
                        "name": "division",
                        "in": "formData",
                        "description": "Division to associate user with",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "Status for user, valid options: 'Available', 'Busy', 'Out of Service', 'Offline'",
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/error"
                                },
                                {
                                    "properties": {
                                        "misc": {
                                            "description": "Extra data for debugging",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Bad Request",
                                "misc": "Invalid status supplied"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Unauthorized"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Forbidden"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error"
                        },
                        "examples": {
                            "application/json": {
                                "status": "error",
                                "msg": "Not Found"
                            }
                        }
                    },
                    "200": {
                        "description": "OK Response",
                        "schema": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/OK"
                                },
                                {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/definitions/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            ]
                        }
                    }
                },
                "security": [
                    "session"
                ]
            }
        }
    },
    "definitions": {
        "error": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "error"
                },
                "msg": {
                    "type": "string",
                    "example": "not_logged_in"
                },
                "exception": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OK": {
            "properties": {
                "status": {
                    "type": "string",
                    "example": "OK"
                }
            },
            "type": "object"
        },
        "Role": {
            "properties": {
                "id": {
                    "description": "Class Role",
                    "type": "integer"
                },
                "user_id": {
                    "description": "User Identification Number",
                    "type": "integer"
                },
                "role": {
                    "description": "Associated Role",
                    "type": "string"
                },
                "created_at": {
                    "description": "Date added to database",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Class Role",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Server": {
            "properties": {
                "id": {
                    "description": "Class Server",
                    "type": "integer"
                },
                "name": {
                    "description": "Unique server name",
                    "type": "string"
                },
                "created_at": {
                    "description": "Date added to database",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Class Server",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User": {
            "properties": {
                "id": {
                    "description": "CAD User ID #",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Account name",
                    "type": "string",
                    "example": "Daniel H."
                },
                "email": {
                    "description": "Email address of user",
                    "type": "string",
                    "example": "daniel@hawton.org"
                },
                "status": {
                    "description": "Current status [valid options: Offline, Available, Busy, Out of Service]",
                    "type": "string",
                    "example": "Offline"
                },
                "server_id": {
                    "description": "Server ID connected to, null for offline",
                    "type": "integer",
                    "example": "1"
                },
                "department": {
                    "description": "Department user is associated with [when connected, null when offline]",
                    "type": "string",
                    "example": "Sheriff"
                },
                "division": {
                    "description": "Division user working in [example: K9]",
                    "type": "string",
                    "example": "K9"
                },
                "signed_on": {
                    "description": "Date/Time user signed into CAD",
                    "type": "string",
                    "example": "2018-07-30 12:31:33"
                },
                "created_at": {
                    "description": "Date/time added to database",
                    "type": "string",
                    "example": "2018-07-30 12:31:33"
                },
                "updated_at": {
                    "description": "Date/time last updated in database",
                    "type": "string",
                    "example": "2018-07-30 12:31:33"
                },
                "roles": {
                    "description": "Array of roles",
                    "type": "array",
                    "items": {
                        "description": "Role",
                        "type": "string",
                        "example": "Admin"
                    }
                }
            },
            "type": "object"
        }
    },
    "securityDefinitions": {
        "Session Cookie": {
            "type": "apiKey",
            "name": "cad_session",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "account",
            "description": "Account maintenance methods"
        },
        {
            "name": "auth",
            "description": "Authentication and deauthentication methods"
        },
        {
            "name": "servers",
            "description": "Handle FiveM Server listings"
        },
        {
            "name": "user",
            "description": "User account management actions"
        }
    ]
}